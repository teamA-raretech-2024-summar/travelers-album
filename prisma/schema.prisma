// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id String @id
  name String
  email String
  password String
  icon String
  birthday DateTime
  tripboardUsers TripboardUser[]
  fellowTraveler FellowTraveler[] @relation("UserRelation")
  fellowFellows FellowTraveler[] @relation("FellowRelation")
}

model FellowTraveler {
  id Int @id @default(autoincrement())
  user_id String
  fellow_id String
  user User @relation("UserRelation", fields: [user_id], references: [id])
  fellow_user User @relation("FellowRelation", fields: [fellow_id], references: [id])
}
  
model TripboardUser {
  id Int @id @default(autoincrement())
  user_id String
  board_id String
  user User @relation(fields: [user_id], references: [id])
  tripBoard TripBoard @relation(fields: [board_id], references: [id])
}
  
model TripBoard {
  id String @id
  title String
  start_at DateTime
  end_at DateTime
  thumbnail String
  owner_id String
  last_update DateTime
  tripboardUsers TripboardUser[]
  tripCard TripCard[]
}
  
model TripCard {
  id String @id
  board_id String
  memo String
  thumbnail_id Int
  tripCard TripBoard @relation(fields: [board_id], references: [id])
}
  
model CardPicture {
  id String @id
  card_id String
  picture String
  photo_date DateTime
}
